----------------EXERCISE 1.  SQL BASICS REVIEW, CUBE AND ROLLUP----------------

SELECT * FROM EMP;
SELECT * FROM DEPT;

--1.1
SELECT EMPNO, LASTNAME, SALARY, WORKDEPT
FROM EMP
WHERE WORKDEPT IN ('D11','D21') AND SALARY BETWEEN 22000 AND 240000
;

--1.2
SELECT MIN(SALARY) AS MIN, MAX(SALARY) AS MAX, AVG(SALARY) AS AVG, COUNT(*) AS COUNT
FROM EMP
WHERE EDLEVEL = 16;

--1.3
SELECT WORKDEPT, MIN(SALARY) AS MIN, MAX(SALARY) AS MAX, AVG(SALARY) AS AVG, COUNT(*) AS COUNT
FROM EMP
GROUP BY WORKDEPT
HAVING COUNT(*) > 5;


--1.4
SELECT WORKDEPT, SEX, MIN(SALARY) AS MIN, MAX(SALARY) AS MAX, SUM(SALARY) AS SUM
FROM EMP
WHERE WORKDEPT LIKE 'D%'
GROUP BY CUBE(WORKDEPT, SEX);

--1.5
SELECT WORKDEPT, AVG(SALARY) AS AVG_TOTAL_SALARY, RANK() 
                                                        OVER (ORDER BY AVG(SALARY + BONUS) DESC) AS RANK
FROM EMP
GROUP BY WORKDEPT;

----------------EXERCISE 2.  CREATE OBJECTS----------------
--2.1
DROP TABLE IF EXISTS EMPDEPT;

CREATE TABLE EMPDEPT (
        EMPNO CHAR(6) NOT NULL,
        LASTNAME VARCHAR(15) NOT NULL,
        SALARY DECIMAL(9, 2),
        DEPTNO CHAR(3) NOT NULL,
        DEPTNAME VARCHAR(36) NOT NULL,
        
        CONSTRAINT SALARY_LIMIT
	CHECK(SALARY <= 700000),
        
        CONSTRAINT SALARY_E11_LIMIT
	CHECK((SALARY <= 38000 AND DEPTNO = 'E11')
	       OR DEPTNO != 'E11')
);      

CREATE UNIQUE INDEX EMPNO_UNIQ 
ON EMPDEPT(EMPNO);

DROP TABLE IF EXISTS HIGHT_SALARY_RAISE;

CREATE TABLE HIGHT_SALARY_RAISE (
EMPNO CHAR(6) NOT NULL,
PREV_SAL DECIMAL(9, 2) NOT NULL,
NEW_SAL DECIMAL(9, 2) NOT NULL
);

--2.2
ALTER TABLE EMPDEPT
        ADD PRIMARY KEY (EMPNO)
        ADD FOREIGN KEY (EMPNO)
                REFERENCES EMPLOYEE
                ON DELETE CASCADE
        ADD FOREIGN KEY (DEPTNO)
                REFERENCES DEPARTMENT
                ON DELETE RESTRICT;        

--2.3
CREATE TRIGGER CHECK_SALARY
        AFTER UPDATE OF SALARY ON EMPDEPT
        REFERENCING NEW AS N OLD AS O 
        FOR EACH ROW
        MODE DB2SQL
        WHEN (N.SALARY - O.SALARY > O.SALARY * 0.1)
        INSERT INTO HIGHT_SALARY_RAISE
                VALUES(N.EMPNO, O.SALARY, N.SALARY);

--2.4
--------------ERROR----------------
-- INSERT INTO EMPDEPT
--        SELECT EMPNO, LASTNAME, SALARY, DEPTNO, DEPTNAME
--        FROM EMP
--        JOIN DEPT ON WORKDEPT = DEPTNO;

--------------CORRECT----------------
INSERT INTO EMPDEPT
        SELECT EMPNO, LASTNAME, SALARY, DEPTNO, DEPTNAME
        FROM EMP
        JOIN DEPT ON WORKDEPT = DEPTNO
        WHERE (SALARY <= 70000) 
        AND ((SALARY <= 38000 AND DEPTNO = 'E11')
                OR DEPTNO != 'E11');
        
SELECT * FROM EMPDEPT;

SELECT * FROM EMPDEPT
WHERE DEPTNO = 'E11';

SELECT * FROM EMP
WHERE WORKDEPT = 'E11';

--2.5
UPDATE EMPDEPT
SET SALARY = 40000
WHERE EMPNO = '000280';

SELECT * FROM EMPDEPT
WHERE EMPNO = '000280';

--2.6
UPDATE EMPDEPT
SET SALARY = 70000
WHERE EMPNO = '000160';

SELECT * FROM HIGHT_SALARY_RAISE;

--2.7
CREATE VIEW VEMPPAY (EMPNO, LASTNAME, DEPTNO, TOTAL_EARN)
        AS SELECT EMPNO, LASTNAME, WORKDEPT, (SALARY + BONUS + COMM)
                FROM EMP;

SELECT DEPTNO, AVG(TOTAL_EARN) AS AVG_EARN
FROM VEMPPAY
GROUP BY DEPTNO;

--2.8
SELECT * FROM TESTEMP;

CREATE VIEW VEMP1 (EMPNO, LASTNAME, SALARY, WORKDEPT)
        AS SELECT EMPNO, LASTNAME, SALARY, WORKDEPT
                FROM TESTEMP
                WHERE SALARY < 50000;

SELECT * FROM VEMP1
ORDER BY EMPNO;

UPDATE VEMP1
SET SALARY = 51000
WHERE EMPNO = '000333';

SELECT * FROM VEMP1
ORDER BY EMPNO;

SELECT * FROM VEMP1
WHERE EMPNO = '000333';

SELECT * FROM TESTEMP
WHERE EMPNO = '000333';
--2.9
UPDATE TESTEMP
SET SALARY = 41500
WHERE EMPNO = '000333';

CREATE VIEW VEMP2 (EMPNO, LASTNAME, SALARY, WORKDEPT)
        AS SELECT EMPNO, LASTNAME, SALARY, WORKDEPT
                FROM TESTEMP
                WHERE SALARY < 50000
                WITH CHECK OPTION;
                
SELECT * FROM VEMP2
ORDER BY EMPNO;

UPDATE VEMP2
SET SALARY = 55000
WHERE EMPNO = '000222';

SELECT * FROM VEMP2
ORDER BY EMPNO;

SELECT * FROM VEMP2
WHERE EMPNO = '000222';

----------------EXERCISE 3. JOINS----------------
--3.1
SELECT * FROM VDEPT;
SELECT * FROM VEMP;
SELECT * FROM VPROJ;

SELECT DEPTNO, EMPNO, LASTNAME
FROM VDEPT, VEMP
WHERE DEPTNO = WORKDEPT
AND DEPTNAME = 'INFORMATION CENTER'
ORDER BY EMPNO;

--3.2
SELECT DEPTNO, EMPNO, LASTNAME
FROM VDEPT
        JOIN VEMP
                ON DEPTNO = WORKDEPT
WHERE DEPTNAME = 'INFORMATION CENTER'
ORDER BY EMPNO;

--3.3
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME
FROM VEMP
        JOIN VPROJ
                ON WORKDEPT = DEPTNO
ORDER BY EMPNO, PROJNAME;

--3.4
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME
FROM VEMP
        LEFT JOIN VPROJ
                ON WORKDEPT = DEPTNO
ORDER BY EMPNO, PROJNAME;


--3.5
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME
FROM VEMP
        RIGHT JOIN VPROJ
                ON WORKDEPT = DEPTNO
ORDER BY PROJNAME, EMPNO;


--3.6
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME
FROM VEMP
        FULL JOIN VPROJ
                ON WORKDEPT = DEPTNO
ORDER BY LASTNAME, PROJNAME;


----------------EXERCISE 4. CASE AND CAST----------------
--4.1
SELECT EMPNO, FIRSTNME, LASTNAME,
CASE
        WHEN SALARY < 45000 THEN 'LOW'
        WHEN SALARY >= 4500 AND SALARY <= 60000 THEN 'NORMAL'
        ELSE 'HIGH'
END AS INCOME
FROM EMP
WHERE WORKDEPT = 'D11';

--4.2
SELECT EMPNO, LASTNAME, (SALARY - 30000) AS DIFFERENCE
FROM EMP
WHERE WORKDEPT = 'D11'
ORDER BY DIFFERENCE;
SELECT * FROM EMP;
--4.3
SELECT WORKDEPT, (DEC(SUM(COALESCE(BONUS, 0))) * 100 / DEC(SUM(SALARY) + SUM(COALESCE(BONUS, 0)) + SUM(COMM))) AS PERCENTAGE_BONUS
FROM EMP
GROUP BY WORKDEPT;

--4.4
SELECT LASTNAME, CAST((COMM / SALARY) * 100 AS DEC(5, 3)) AS COMM_PERCENTAGE
FROM EMP
WHERE(CASE
        WHEN SALARY = 0 THEN NULL
        ELSE COMM / SALARY
        END) >= 0.08;

----------------EXERCISE 5. SUBQUERIES----------------
--5.1
SELECT EMPNO, LASTNAME, DEPTNAME
FROM EMP
JOIN DEPT 
        ON WORKDEPT = DEPTNO
WHERE EMPNO NOT IN (SELECT EMPNO FROM EMP_ACT);

--5.2
SELECT EMPNO, SALARY, WORKDEPT
FROM EMP AS E
WHERE SALARY > (
                SELECT AVG(SALARY)
                FROM EMP AS ESLR
                WHERE E.WORKDEPT = ESLR.WORKDEPT
                )
ORDER BY WORKDEPT, EMPNO;

--5.3
SELECT WORKDEPT, COUNT(*) AS EMP_COUNT
FROM EMP
GROUP BY WORKDEPT
HAVING WORKDEPT != 'A00'
AND COUNT(*) = (SELECT COUNT(*) 
                        FROM EMP
                        WHERE WORKDEPT = 'A00'); 

--5.4
SELECT EMPNO, LASTNAME, SALARY, WORKDEPT
FROM EMP
WHERE WORKDEPT != 'D11'
AND SALARY > ANY (SELECT SALARY FROM EMP
                  WHERE WORKDEPT = 'D11')
ORDER BY EMPNO;

--5.5
SELECT EMPNO, LASTNAME, SALARY, WORKDEPT
FROM EMP
WHERE WORKDEPT != 'D11'
AND SALARY > ALL (SELECT SALARY FROM EMP
                  WHERE WORKDEPT = 'D11')
ORDER BY EMPNO;

--5.6
SELECT EMP.EMPNO, LASTNAME, COUNT(*) AS COUNT_ACT
FROM EMP
JOIN EMP_ACT
ON EMP.EMPNO = EMP_ACT.EMPNO
GROUP BY EMP.EMPNO, LASTNAME
HAVING COUNT(*) >= ALL (SELECT COUNT(*) FROM EMP_ACT
                        GROUP BY EMPNO);

--5.7
SELECT DISTINCT EMP.EMPNO, LASTNAME, ACTNO
FROM EMP
JOIN EMP_ACT 
ON EMP.EMPNO = EMP_ACT.EMPNO
WHERE 2002 BETWEEN YEAR(EMSTDATE) AND YEAR(EMENDATE);

----------------EXERCISE 6. SCALAR FUNCTIONS----------------
--6.1
SELECT EMPNO, LASTNAME, SUBSTRING(LASTNAME, LENGTH(LASTNAME)) AS LASTCHAR
FROM EMP
WHERE LASTNAME LIKE '%N';

--6.2
SELECT PROJNO, PROJNAME, DEPTNO, COALESCE(MAJPROJ, 'NO MAJOR PROJECT') AS MAJPROJ
FROM PROJECT
WHERE DEPTNO IN ('D01','D11')
ORDER BY PROJNO;

--6.3
SELECT EMPNO, LASTNAME, WORKDEPT,
 (DECIMAL((SALARY + SALARY * 0.0375), 8, 2) || ' ' || (DECIMAL((SALARY + SALARY * 0.0375 - SALARY), 4, 0))) AS SALARYAMOUNT
FROM EMP
WHERE WORKDEPT = 'E11';

--6.4
SELECT EMPNO, LASTNAME, WORKDEPT,
 (DECIMAL((SALARY + SALARY * 0.0375), 8, 2) || ' ' || (DECIMAL((SALARY + SALARY * 0.0375 - SALARY), 4, 0))) AS SALARYAMOUNT
FROM EMP
WHERE WORKDEPT = 'E11';

--6.5
SELECT WORKDEPT, JOB || ': ' || LASTNAME AS LISTING
FROM EMP
WHERE SEX = 'F';

--6.6
SELECT EMPNO, YEAR(HIREDATE - BIRTHDATE) AS YEARS, MONTH(HIREDATE - BIRTHDATE) AS MONTHS,
DAY(HIREDATE - BIRTHDATE) AS DAYS
FROM EMP
WHERE YEAR(HIREDATE - BIRTHDATE) > 30
ORDER BY EMPNO;

--6.7
SELECT PROJNO, PROJNAME, PRSTDATE, PRENDATE, (DAYS(PRENDATE) - DAYS(PRSTDATE)) AS DAYS_DURATION
FROM PROJ
WHERE(
        (YEAR(PRENDATE - PRSTDATE) < 1 
        AND MONTH(PRENDATE - PRSTDATE) < 10)
        OR (YEAR(PRENDATE - PRSTDATE) = 1 
        AND MONTH(PRENDATE - PRSTDATE) < -3));


--6.8
SELECT * FROM EMP_ACT;
SELECT EMP.EMPNO, LASTNAME, FIRSTNME, ACTNO, EMSTDATE, (DAYS(EMENDATE) - DAYS(EMSTDATE)) AS DAYS_DURATION
FROM EMP
JOIN EMP_ACT
        ON EMP.EMPNO = EMP_ACT.EMPNO
WHERE WORKDEPT = 'D11';

--6.9
SELECT ((DAYS('2000-01-01') - DAYS('1969-07-20')) / 7) AS WEEKS
FROM SYSIBM.SYSDUMMY1;

--6.10
SELECT HIREDATE, LASTNAME
FROM EMP
WHERE DAYOFWEEK(HIREDATE) IN (6, 7);
